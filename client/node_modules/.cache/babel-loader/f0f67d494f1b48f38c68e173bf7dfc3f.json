{"ast":null,"code":"import { ADD_TODO, UPDATE_TODO, DELETE_TODO } from \"../constant\";\nimport axios from \"axios\";\nexport var addTodo = function addTodo(name) {\n  return function (dispatch) {\n    axios.post(\"/api/post_todo\", {\n      name: name\n    }).then(function (res) {\n      if (res.status === 200) {\n        dispatch(addTodoSuccess(res.data.todo));\n      } else if (res.status === 301) {\n        console.log(res.data.message);\n      }\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  };\n};\n\nvar addTodoSuccess = function addTodoSuccess(name) {\n  var action = {\n    type: ADD_TODO,\n    name: name\n  };\n  console.log(\"addTodo is called...\");\n  return action;\n};\n\nexport var setInitialTodo = function setInitialTodo() {\n  return function (dispatch) {\n    axios.get(\"/api/get_todo\").then(function (res) {\n      if (res.status === 200) {\n        console.log(res.data);\n        res.data.todo.map(function (item) {\n          dispatch(setInitialTodoSuccess(item));\n        });\n      }\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  };\n};\n\nvar setInitialTodoSuccess = function setInitialTodoSuccess(name) {\n  var action = {\n    type: ADD_TODO,\n    name: name\n  };\n  return action;\n};\n\nexport var updateTodo = function updateTodo(id, name, completed, priority) {\n  return function (dispatch) {\n    axios.put(\"/api/update_todo\", {\n      id: id,\n      name: name,\n      completed: completed,\n      priority: priority\n    }).then(function (res) {\n      if (res.status === 200) {\n        dispatch(updateTodoState(id, name, completed, priority));\n      }\n    }).catch(function (err) {\n      return alert('something wrong');\n    });\n  };\n};\n\nvar updateTodoState = function updateTodoState(id, name, completed, priority) {\n  var action = {\n    type: UPDATE_TODO,\n    payload: {\n      completed: completed,\n      priority: priority,\n      _id: id,\n      name: name\n    }\n  };\n  return action;\n};\n\nexport var deleteTodo = function deleteTodo(id) {\n  return function (dispatch) {\n    axios.delete(\"/api/delete_todo\", {\n      data: {\n        id: id\n      }\n    }).then(function (res) {\n      if (res.status === 200) {\n        dispatch(deleteTodoState(id));\n      }\n    });\n  };\n};\n\nvar deleteTodoState = function deleteTodoState(id) {\n  var action = {\n    type: DELETE_TODO,\n    payload: {\n      id: id\n    }\n  };\n  return action;\n};","map":{"version":3,"sources":["/home/mayank/Desktop/Todo-20190529T095321Z-001/Todo/client/src/actions/index.js"],"names":["ADD_TODO","UPDATE_TODO","DELETE_TODO","axios","addTodo","name","dispatch","post","then","res","status","addTodoSuccess","data","todo","console","log","message","catch","err","action","type","setInitialTodo","get","map","item","setInitialTodoSuccess","updateTodo","id","completed","priority","put","updateTodoState","alert","payload","_id","deleteTodo","delete","deleteTodoState"],"mappings":"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","sourcesContent":["import { ADD_TODO, UPDATE_TODO, DELETE_TODO } from \"../constant\";\r\nimport axios from \"axios\";\r\n\r\nexport const addTodo = name => {\r\n  return dispatch => {\r\n    axios\r\n      .post(\"/api/post_todo\", { name: name })\r\n      .then(res => {\r\n        if (res.status === 200) {\r\n          dispatch(addTodoSuccess(res.data.todo));\r\n        } else if (res.status === 301) {\r\n          console.log(res.data.message);\r\n        }\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n};\r\n\r\nconst addTodoSuccess = name => {\r\n  const action = {\r\n    type: ADD_TODO,\r\n    name\r\n  };\r\n  console.log(\"addTodo is called...\");\r\n  return action;\r\n};\r\n\r\nexport const setInitialTodo = () => {\r\n  return dispatch => {\r\n    axios\r\n      .get(\"/api/get_todo\")\r\n      .then(res => {\r\n        if (res.status === 200) {\r\n          console.log(res.data);\r\n          res.data.todo.map(item => {\r\n            dispatch(setInitialTodoSuccess(item));\r\n          });\r\n        }\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n};\r\n\r\nconst setInitialTodoSuccess = name => {\r\n  const action = {\r\n    type: ADD_TODO,\r\n    name\r\n  };\r\n  return action;\r\n};\r\n\r\nexport const updateTodo = (id, name, completed, priority) => {\r\n  return dispatch => {\r\n    axios\r\n      .put(\"/api/update_todo\", {\r\n        id,\r\n        name,\r\n        completed,\r\n        priority\r\n      })\r\n      .then(res => {\r\n        if (res.status === 200) {\r\n          dispatch(updateTodoState(id, name, completed, priority));\r\n        }\r\n      }).catch(err=>alert('something wrong'));\r\n  };\r\n};\r\n\r\nconst updateTodoState = (id, name, completed, priority) => {\r\n  const action = {\r\n    type: UPDATE_TODO,\r\n    payload: {\r\n      completed,\r\n      priority,\r\n      _id: id,\r\n      name\r\n    }\r\n  };\r\n  return action;\r\n};\r\n\r\nexport const deleteTodo = id => {\r\n  return dispatch => {\r\n    axios.delete(\"/api/delete_todo\", {data:{id:id}}).then(res => {\r\n      if (res.status === 200) {\r\n        dispatch(deleteTodoState(id))\r\n      }\r\n    });\r\n  };\r\n};\r\n\r\nconst deleteTodoState = id => {\r\n  const action = {\r\n    type: DELETE_TODO,\r\n    payload: {\r\n      id\r\n    }\r\n  };\r\n  return action;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}